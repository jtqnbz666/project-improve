// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wzqLeaderBoard.proto

#ifndef PROTOBUF_wzqLeaderBoard_2eproto__INCLUDED
#define PROTOBUF_wzqLeaderBoard_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "wzqProtocol.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_wzqLeaderBoard_2eproto();
void protobuf_AssignDesc_wzqLeaderBoard_2eproto();
void protobuf_ShutdownFile_wzqLeaderBoard_2eproto();

class REQLeaderboard;
class ACKLeaderboard;
class UpBoardReq;
class LeaderboardEntity;

// ===================================================================

class REQLeaderboard : public ::google::protobuf::Message {
 public:
  REQLeaderboard();
  virtual ~REQLeaderboard();

  REQLeaderboard(const REQLeaderboard& from);

  inline REQLeaderboard& operator=(const REQLeaderboard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const REQLeaderboard& default_instance();

  void Swap(REQLeaderboard* other);

  // implements Message ----------------------------------------------

  REQLeaderboard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const REQLeaderboard& from);
  void MergeFrom(const REQLeaderboard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:REQLeaderboard)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_wzqLeaderBoard_2eproto();
  friend void protobuf_AssignDesc_wzqLeaderBoard_2eproto();
  friend void protobuf_ShutdownFile_wzqLeaderBoard_2eproto();

  void InitAsDefaultInstance();
  static REQLeaderboard* default_instance_;
};
// -------------------------------------------------------------------

class ACKLeaderboard : public ::google::protobuf::Message {
 public:
  ACKLeaderboard();
  virtual ~ACKLeaderboard();

  ACKLeaderboard(const ACKLeaderboard& from);

  inline ACKLeaderboard& operator=(const ACKLeaderboard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ACKLeaderboard& default_instance();

  void Swap(ACKLeaderboard* other);

  // implements Message ----------------------------------------------

  ACKLeaderboard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ACKLeaderboard& from);
  void MergeFrom(const ACKLeaderboard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .LeaderboardEntity lbEntities = 1;
  inline int lbentities_size() const;
  inline void clear_lbentities();
  static const int kLbEntitiesFieldNumber = 1;
  inline const ::LeaderboardEntity& lbentities(int index) const;
  inline ::LeaderboardEntity* mutable_lbentities(int index);
  inline ::LeaderboardEntity* add_lbentities();
  inline const ::google::protobuf::RepeatedPtrField< ::LeaderboardEntity >&
      lbentities() const;
  inline ::google::protobuf::RepeatedPtrField< ::LeaderboardEntity >*
      mutable_lbentities();

  // optional int32 resultCode = 2;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 2;
  inline ::google::protobuf::int32 resultcode() const;
  inline void set_resultcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ACKLeaderboard)
 private:
  inline void set_has_resultcode();
  inline void clear_has_resultcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::LeaderboardEntity > lbentities_;
  ::google::protobuf::int32 resultcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_wzqLeaderBoard_2eproto();
  friend void protobuf_AssignDesc_wzqLeaderBoard_2eproto();
  friend void protobuf_ShutdownFile_wzqLeaderBoard_2eproto();

  void InitAsDefaultInstance();
  static ACKLeaderboard* default_instance_;
};
// -------------------------------------------------------------------

class UpBoardReq : public ::google::protobuf::Message {
 public:
  UpBoardReq();
  virtual ~UpBoardReq();

  UpBoardReq(const UpBoardReq& from);

  inline UpBoardReq& operator=(const UpBoardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpBoardReq& default_instance();

  void Swap(UpBoardReq* other);

  // implements Message ----------------------------------------------

  UpBoardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpBoardReq& from);
  void MergeFrom(const UpBoardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .LeaderboardEntity lbEntity = 1;
  inline bool has_lbentity() const;
  inline void clear_lbentity();
  static const int kLbEntityFieldNumber = 1;
  inline const ::LeaderboardEntity& lbentity() const;
  inline ::LeaderboardEntity* mutable_lbentity();
  inline ::LeaderboardEntity* release_lbentity();
  inline void set_allocated_lbentity(::LeaderboardEntity* lbentity);

  // optional string boardKey = 2;
  inline bool has_boardkey() const;
  inline void clear_boardkey();
  static const int kBoardKeyFieldNumber = 2;
  inline const ::std::string& boardkey() const;
  inline void set_boardkey(const ::std::string& value);
  inline void set_boardkey(const char* value);
  inline void set_boardkey(const char* value, size_t size);
  inline ::std::string* mutable_boardkey();
  inline ::std::string* release_boardkey();
  inline void set_allocated_boardkey(::std::string* boardkey);

  // @@protoc_insertion_point(class_scope:UpBoardReq)
 private:
  inline void set_has_lbentity();
  inline void clear_has_lbentity();
  inline void set_has_boardkey();
  inline void clear_has_boardkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::LeaderboardEntity* lbentity_;
  ::std::string* boardkey_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_wzqLeaderBoard_2eproto();
  friend void protobuf_AssignDesc_wzqLeaderBoard_2eproto();
  friend void protobuf_ShutdownFile_wzqLeaderBoard_2eproto();

  void InitAsDefaultInstance();
  static UpBoardReq* default_instance_;
};
// -------------------------------------------------------------------

class LeaderboardEntity : public ::google::protobuf::Message {
 public:
  LeaderboardEntity();
  virtual ~LeaderboardEntity();

  LeaderboardEntity(const LeaderboardEntity& from);

  inline LeaderboardEntity& operator=(const LeaderboardEntity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaderboardEntity& default_instance();

  void Swap(LeaderboardEntity* other);

  // implements Message ----------------------------------------------

  LeaderboardEntity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaderboardEntity& from);
  void MergeFrom(const LeaderboardEntity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // optional uint64 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);

  // optional .UserRawData personInfo = 3;
  inline bool has_personinfo() const;
  inline void clear_personinfo();
  static const int kPersonInfoFieldNumber = 3;
  inline const ::UserRawData& personinfo() const;
  inline ::UserRawData* mutable_personinfo();
  inline ::UserRawData* release_personinfo();
  inline void set_allocated_personinfo(::UserRawData* personinfo);

  // @@protoc_insertion_point(class_scope:LeaderboardEntity)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_personinfo();
  inline void clear_has_personinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 score_;
  ::UserRawData* personinfo_;
  ::google::protobuf::int32 rank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_wzqLeaderBoard_2eproto();
  friend void protobuf_AssignDesc_wzqLeaderBoard_2eproto();
  friend void protobuf_ShutdownFile_wzqLeaderBoard_2eproto();

  void InitAsDefaultInstance();
  static LeaderboardEntity* default_instance_;
};
// ===================================================================


// ===================================================================

// REQLeaderboard

// optional uint64 uid = 1;
inline bool REQLeaderboard::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void REQLeaderboard::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void REQLeaderboard::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void REQLeaderboard::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 REQLeaderboard::uid() const {
  return uid_;
}
inline void REQLeaderboard::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// ACKLeaderboard

// repeated .LeaderboardEntity lbEntities = 1;
inline int ACKLeaderboard::lbentities_size() const {
  return lbentities_.size();
}
inline void ACKLeaderboard::clear_lbentities() {
  lbentities_.Clear();
}
inline const ::LeaderboardEntity& ACKLeaderboard::lbentities(int index) const {
  return lbentities_.Get(index);
}
inline ::LeaderboardEntity* ACKLeaderboard::mutable_lbentities(int index) {
  return lbentities_.Mutable(index);
}
inline ::LeaderboardEntity* ACKLeaderboard::add_lbentities() {
  return lbentities_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::LeaderboardEntity >&
ACKLeaderboard::lbentities() const {
  return lbentities_;
}
inline ::google::protobuf::RepeatedPtrField< ::LeaderboardEntity >*
ACKLeaderboard::mutable_lbentities() {
  return &lbentities_;
}

// optional int32 resultCode = 2;
inline bool ACKLeaderboard::has_resultcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ACKLeaderboard::set_has_resultcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ACKLeaderboard::clear_has_resultcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ACKLeaderboard::clear_resultcode() {
  resultcode_ = 0;
  clear_has_resultcode();
}
inline ::google::protobuf::int32 ACKLeaderboard::resultcode() const {
  return resultcode_;
}
inline void ACKLeaderboard::set_resultcode(::google::protobuf::int32 value) {
  set_has_resultcode();
  resultcode_ = value;
}

// -------------------------------------------------------------------

// UpBoardReq

// optional .LeaderboardEntity lbEntity = 1;
inline bool UpBoardReq::has_lbentity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpBoardReq::set_has_lbentity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpBoardReq::clear_has_lbentity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpBoardReq::clear_lbentity() {
  if (lbentity_ != NULL) lbentity_->::LeaderboardEntity::Clear();
  clear_has_lbentity();
}
inline const ::LeaderboardEntity& UpBoardReq::lbentity() const {
  return lbentity_ != NULL ? *lbentity_ : *default_instance_->lbentity_;
}
inline ::LeaderboardEntity* UpBoardReq::mutable_lbentity() {
  set_has_lbentity();
  if (lbentity_ == NULL) lbentity_ = new ::LeaderboardEntity;
  return lbentity_;
}
inline ::LeaderboardEntity* UpBoardReq::release_lbentity() {
  clear_has_lbentity();
  ::LeaderboardEntity* temp = lbentity_;
  lbentity_ = NULL;
  return temp;
}
inline void UpBoardReq::set_allocated_lbentity(::LeaderboardEntity* lbentity) {
  delete lbentity_;
  lbentity_ = lbentity;
  if (lbentity) {
    set_has_lbentity();
  } else {
    clear_has_lbentity();
  }
}

// optional string boardKey = 2;
inline bool UpBoardReq::has_boardkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpBoardReq::set_has_boardkey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpBoardReq::clear_has_boardkey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpBoardReq::clear_boardkey() {
  if (boardkey_ != &::google::protobuf::internal::kEmptyString) {
    boardkey_->clear();
  }
  clear_has_boardkey();
}
inline const ::std::string& UpBoardReq::boardkey() const {
  return *boardkey_;
}
inline void UpBoardReq::set_boardkey(const ::std::string& value) {
  set_has_boardkey();
  if (boardkey_ == &::google::protobuf::internal::kEmptyString) {
    boardkey_ = new ::std::string;
  }
  boardkey_->assign(value);
}
inline void UpBoardReq::set_boardkey(const char* value) {
  set_has_boardkey();
  if (boardkey_ == &::google::protobuf::internal::kEmptyString) {
    boardkey_ = new ::std::string;
  }
  boardkey_->assign(value);
}
inline void UpBoardReq::set_boardkey(const char* value, size_t size) {
  set_has_boardkey();
  if (boardkey_ == &::google::protobuf::internal::kEmptyString) {
    boardkey_ = new ::std::string;
  }
  boardkey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UpBoardReq::mutable_boardkey() {
  set_has_boardkey();
  if (boardkey_ == &::google::protobuf::internal::kEmptyString) {
    boardkey_ = new ::std::string;
  }
  return boardkey_;
}
inline ::std::string* UpBoardReq::release_boardkey() {
  clear_has_boardkey();
  if (boardkey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = boardkey_;
    boardkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UpBoardReq::set_allocated_boardkey(::std::string* boardkey) {
  if (boardkey_ != &::google::protobuf::internal::kEmptyString) {
    delete boardkey_;
  }
  if (boardkey) {
    set_has_boardkey();
    boardkey_ = boardkey;
  } else {
    clear_has_boardkey();
    boardkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// LeaderboardEntity

// optional int32 rank = 1;
inline bool LeaderboardEntity::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaderboardEntity::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaderboardEntity::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaderboardEntity::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 LeaderboardEntity::rank() const {
  return rank_;
}
inline void LeaderboardEntity::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// optional uint64 score = 2;
inline bool LeaderboardEntity::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LeaderboardEntity::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LeaderboardEntity::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LeaderboardEntity::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 LeaderboardEntity::score() const {
  return score_;
}
inline void LeaderboardEntity::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
}

// optional .UserRawData personInfo = 3;
inline bool LeaderboardEntity::has_personinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LeaderboardEntity::set_has_personinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LeaderboardEntity::clear_has_personinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LeaderboardEntity::clear_personinfo() {
  if (personinfo_ != NULL) personinfo_->::UserRawData::Clear();
  clear_has_personinfo();
}
inline const ::UserRawData& LeaderboardEntity::personinfo() const {
  return personinfo_ != NULL ? *personinfo_ : *default_instance_->personinfo_;
}
inline ::UserRawData* LeaderboardEntity::mutable_personinfo() {
  set_has_personinfo();
  if (personinfo_ == NULL) personinfo_ = new ::UserRawData;
  return personinfo_;
}
inline ::UserRawData* LeaderboardEntity::release_personinfo() {
  clear_has_personinfo();
  ::UserRawData* temp = personinfo_;
  personinfo_ = NULL;
  return temp;
}
inline void LeaderboardEntity::set_allocated_personinfo(::UserRawData* personinfo) {
  delete personinfo_;
  personinfo_ = personinfo;
  if (personinfo) {
    set_has_personinfo();
  } else {
    clear_has_personinfo();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_wzqLeaderBoard_2eproto__INCLUDED
